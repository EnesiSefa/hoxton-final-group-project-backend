// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// test
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  lastName     String
  email        String         @unique
  password     String
  balance      Int            @default(500)
  cart        CartItem[]
  reviews      Review[]
  boughtCourse BoughtCourse[]
}

model Instructor {
  id       Int      @id @default(autoincrement())
  name     String
  lastName String
  email    String   @unique
  password String
  courses  Course[]
}

model Review {
  id       Int    @id @default(autoincrement())
  review   String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
}

model Course {
  id           Int            @id @default(autoincrement())
  title        String
  category     Category       @relation(fields: [categoryId], references: [id])
  categoryId   Int
  instructor   Instructor     @relation(fields: [instructorId], references: [id])
  instructorId Int
  reviews      Review[]
  image        String
  description  String
  price        Int
  CartItem     CartItem[]
  boughtCourse BoughtCourse[]
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  courses Course[]
}

model CartItem {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   Int
  courseId Int
}
=======
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   Int
  courseId   Int
 }
>>>>>>> 67f3a52c96213d1fcf0e4ab50b1c52e37b3c7146
=======
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   Int
  courseId   Int
 }
>>>>>>> 67f3a52c96213d1fcf0e4ab50b1c52e37b3c7146
=======
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   Int
  courseId   Int
 }
>>>>>>> 67f3a52c96213d1fcf0e4ab50b1c52e37b3c7146

model BoughtCourse {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   Int
  courseId Int
}
